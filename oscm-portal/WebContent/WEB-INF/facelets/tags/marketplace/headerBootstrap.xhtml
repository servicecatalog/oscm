<!-- Copyright FUJITSU LIMITED 2020-->
<!DOCTYPE html>
<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:h="http://xmlns.jcp.org/jsf/html" xmlns:a4j="http://richfaces.org/a4j"
                xmlns:f="http://xmlns.jcp.org/jsf/core" xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">

  <c:set var="logoimg" value="#{sessionBean.marketplaceBrandBaseUrl}/img/mp_logo.png"/>


  <nav class="px-1 navbar navbar-expand-lg navbar-themed fixed-top position-absolute">
    <div class="container-fluid h6 m-0 px-3">
      <div class="no-gutters row align-items-center">
        <a class="navbar-brand" href="#{mpBaseUrl}/index.jsf">
          <h:graphicImage value="${logoimg}" alt="My Logo"/>
        </a>
      </div>
      <button id="navbarToggleButton" class="navbar-toggler" type="button" data-toggle="collapse"
              data-target="#navbar" aria-controls="navbar">
        <span class="navbar-toggler-icon">
          <i class="fa fa-bars"/>
        </span>
      </button>

      <div class="collapse navbar-collapse" id="navbar">
        <ul class="order-sm-first order-lg-3 nav navbar-nav ml-auto">
          <ui:fragment rendered="true">
            <!-- search  -->
            <h:form id="searchForm" class=" form-inline my-2 my-lg-0">

              <h:inputHidden value="all_www" name="restrict"/>
              <h:inputHidden id="searchPhrase" value="#{servicePagingBean.searchPhrase}"/>
              <c:if test="#{empty servicePagingBean.searchPhrase}">
                <input class="form-control mr-1 inputSearch" id="inputSearch"
                       placeholder="#{msg['marketplace.search']}" size="30"
                       maxlength="#{servicePagingBean.maxLengthSearchPhrase}"
                       onkeydown="AdmUtils.clickOnReturn(event,'searchForm:hiddenLink');" onfocus="this.value = '';"/>
              </c:if>
              <c:if test="#{not empty servicePagingBean.searchPhrase}">
                <input class="form-control w-sm-75 mr-1 inputSearch" id="inputSearch"
                       value="#{servicePagingBean.searchPhrase}" placeholder="#{msg['marketplace.search']}" size="30"
                       maxlength="#{servicePagingBean.maxLengthSearchPhrase}"
                       onkeydown="AdmUtils.clickOnReturn(event,'searchForm:hiddenLink');"/>
              </c:if>
              <h:commandLink id="hiddenLink" style="display:none; visibility: hidden;"
                             onclick="AdmUtils.copyElementValues('inputSearch','searchForm:searchPhrase');AdmUtils.IE9AfterClick('inputSearch');return true;"
                             action="#{serviceListingBean.showServiceListSearch}"/>
              <h:inputHidden value="UTF-8" name="ie"/>

              <c:if test="#{servicePagingBean.searchAvailable}">
                <h:commandLink name="btnG" id="submit" action="#{serviceListingBean.showServiceListSearch}"
                               onclick="AdmUtils.IE9OnClick('inputSearch');AdmUtils.showProgress(true);AdmUtils.copyElementValues('inputSearch','searchForm:searchPhrase');AdmUtils.IE9AfterClick('inputSearch');return true;"
                               styleClass="btn btn-outline-secondary my-2 my-sm-0">
                  <i class="fa fa-search"/>
                </h:commandLink>
              </c:if>

              <c:if test="#{not servicePagingBean.searchAvailable and userBean.internalAuthMode}">
                <h:commandLink name="btnG" id="submit" onclick="showLoginPanel('/marketplace/index.jsf');"
                               styleClass="btn btn-outline-secondary my-2 my-sm-0">
                  <i class="fa fa-search"/>
                </h:commandLink>
              </c:if>

            </h:form>

          </ui:fragment>

        </ul>
        <ul class="order-lg-first nav navbar-nav">
          <!-- Home -->
          <li id="homeLink" class="#{pageId eq 'marketplace.home' ? 'nav-item active' : 'nav-item'}"><a
              class="order-lg-first nav-link" href="#{mpBaseUrl}/index.jsf?mId=#{mId}">
            <i class="fa fa-fw fa-home"/>#{msg['navigation.home']}</a></li>
          <!-- Browse Services -->
          <li id="servicesLink" class="#{pageId eq 'marketplace.services' ? 'nav-item active' : 'nav-item'}"><a
              class="order-lg-2 nav-link" href="#{mpBaseUrl}/services.jsf">#{msg['button.browse']}</a></li>
          <!-- Help -->
          <ui:fragment rendered="#{user ne null}">
            <li class="nav-item">
              <a class="nav-link" href="#"
                 onclick="AdmUtils.showFaq('#{facesContext.externalContext.requestContextPath}', '#{facesContext.viewRoot.locale}');">
                #{msg['marketplace.help']}
              </a>
            </li>
          </ui:fragment>
        </ul>
        <ul class="order-lg-last nav navbar-nav">
          <li>
            <ui:fragment rendered="#{user eq null}">
              <!-- login if user is empty -->
              <c:if test="#{userBean.internalAuthMode}">
                <a href="#" class="order-lg-4 nav-link" onclick="#{loginHandler}">
                  <h:outputText value=" #{msg['login']}"/>
                  <i class=" fa fa-fw fa-sign-in"/></a>
              </c:if>
              <c:if test="#{not userBean.internalAuthMode}">
                <a4j:region>
                  <h:form id="formLogin">
                    <h:outputLink id="loginLink" class="order-lg-4 nav-link">
                      <h:outputText value=" #{msg['login']}"/>
                      <i class="fa fa-fw fa-sign-in"/>
                      <f:param name="login" value="oidc"/>
                    </h:outputLink>
                  </h:form>
                </a4j:region>
              </c:if>
            </ui:fragment>
            <ui:fragment rendered="#{user ne null}">
              <li class="nav-item dropdown"><a class="order-lg-4 nav-link dropdown-toggle waves-effect waves-light"
                                               href="#" id="navbarUserToggle" data-toggle="dropdown"
                                               data-target="#userDrop"><i class="fa fa-user"/>
                <h:outputText id="welcome"/>
                #{msg['OPERATIONS_ORGANIZATION_USER']} </a>
                <div id="userDrop" class="dropdown-menu dropdown-menu-right mb-1">
                  <p class="px-4 py-sm-2 mb-1">
                    #{msg['marketplace.logging']} <strong><br>#{user.userId}</br></strong>
                  </p>
                  <div class="form-check form-switch pl-1 d-none">
                    <input class="form-check-input toggle-theme-switch my-2" type="checkbox" id="toggle-switch"/>
                    <label class="form-check-label" for="toggle-switch">Color theme</label>
                  </div>
                  <div class="dropdown-divider"></div>
                  <a class="dropdown-item" href="#{mpBaseUrl}/account/index.jsf">#{msg['navigation.myAccount']}</a>
                  <a class="dropdown-item" href="#{mpBaseUrl}/subscriptions/index.jsf">#{msg['navigation.subscriptions']}</a>
                  <div class="dropdown-divider"></div>
                  <h:form id="formLogout">
                    <c:if test="#{userBean.internalAuthMode}">
                      <h:commandLink class="dropdown-item" id="logout" action="#{userBean.logoff}">
                        <i class="fa fa-fw fa-sign-out"/>#{msg['logout']}
                      </h:commandLink>
                    </c:if>
                    <c:if test="#{not userBean.internalAuthMode}">
                      <h:outputLink id="logout" class="dropdown-item">
                        <i class="fa fa-fw fa-sign-out"/>
                        <h:outputText class="px-1" value="#{msg['logout']}"/>
                        <f:param name="logout" value="oidc"/>
                      </h:outputLink>
                    </c:if>
                  </h:form>
                </div>
              </li>
            </ui:fragment>
          </li>
        </ul>
      </div>
    </div>
  </nav>

  <script type="text/javascript">
    AdmUtils.IE9PlaceHolderFix('#{servicePagingBean.searchPhrase}', 'inputSearch');

    const COLOR_MODES = ["light", "dark"];
    const THEME_ATTR = "data-theme";
    const STORE_ATTR = "storage-theme";
    const systemColorMode = window.matchMedia("(prefers-color-scheme: dark)").matches ? COLOR_MODES[1] : COLOR_MODES[0];
    const userColorMode = window.localStorage.getItem(STORE_ATTR);
    const initialColorMode = COLOR_MODES.includes(userColorMode) ? userColorMode : systemColorMode;

    function setColorMode (mode) {
      if (COLOR_MODES.includes(mode)) {
        window.localStorage.setItem(STORE_ATTR, mode);
        document.documentElement.setAttribute(THEME_ATTR, mode);

         if (#{sessionScope.userDisplaySettings != null }) {
           setColorSchema()
         }
      }
    };
    
    if (#{sessionScope.userDisplaySettings != null ? sessionScope.userDisplaySettings.darkMode : 'false' }) {
      setColorMode(COLOR_MODES[1]); 
    } else {
      setColorMode(COLOR_MODES[0]);  
    }
    
    function hexToHSL(hex) {    
      var result = hex.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i);
      r = parseInt(result[1], 16);
      g = parseInt(result[2], 16);
      b =  parseInt(result[3], 16);

      r /= 255, g /= 255, b /= 255;

      var max = Math.max(r, g, b), min = Math.min(r, g, b);
      var h, s, l = (max + min) / 2;

      if (max == min) {
        h = s = 0; // achromatic
      } else {
        var d = max - min;
        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);

        switch (max) {
          case r: h = (g - b) / d + (g &lt; b ? 6 : 0); break;
          case g: h = (b - r) / d + 2; break;
          case b: h = (r - g) / d + 4; break;
        }

        h /= 6;
      }

      h = Math.round(360*h);
      s = Math.round(s*100);
      l = Math.round(l*100);
      console.log(h);
      console.log(s);
      console.log(l);

      return [ h, s, l ];
    }

    function setColorSchema() {

      let colorMap = new Map()
      colorMap.set('${sessionScope.userDisplaySettings.primaryColor}', '--oscm-primary')
      colorMap.set('${sessionScope.userDisplaySettings.fontColor}', '--oscm-main-font-color')
      colorMap.set('${sessionScope.userDisplaySettings.navbarColor}', '--oscm-navbar-color')
      colorMap.set('${sessionScope.userDisplaySettings.navbarLinkColor}', '--oscm-navbar-links-color')
      colorMap.set('${sessionScope.userDisplaySettings.inputColor}', '--oscm-main-input-color')

      for (let [key, value] of colorMap) {
        console.log(key);
        if (key != null) {
          console.log(key);
          var hsl = hexToHSL(key);

          document.documentElement.style.setProperty(value + '-h', hsl[0].toString());
          document.documentElement.style.setProperty(value + '-s', hsl[1] + "%");
          document.documentElement.style.setProperty(value + '-l', hsl[2] + "%");
        }
      }
    }
  </script>
</ui:composition>
